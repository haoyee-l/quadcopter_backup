C51 COMPILER V9.00   EEPROM                                                                02/02/2015 10:24:51 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN EEPROM.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE EEPROM.C LARGE OMF2 BROWSE DEBUG TABS(2)

line level    source

   1          #include <STC15W4K60S4.H>
   2          #include <EEPROM.h>
   3          #include <intrins.h>
   4          #include <NRF24L01.H>
   5          #include <MPU6050.H>
   6          #define CMD_IDLE    0            
   7          #define CMD_READ    1              
   8          #define CMD_PROGRAM 2               
   9          #define CMD_ERASE   3              
  10          
  11          #define ENABLE_IAP 0x80           //if SYSCLK<30MHz
  12          extern int g_x,g_y,g_z;            //陀螺仪矫正参数
  13          void IapIdle()
  14          {
  15   1          IAP_CONTR = 0;                 
  16   1          IAP_CMD = 0;                    
  17   1          IAP_TRIG = 0;                  
  18   1          IAP_ADDRH = 0x80;              
  19   1          IAP_ADDRL = 0;
  20   1      }
  21          unsigned char IapReadByte(unsigned int addr) //读取1字节
  22          {
  23   1          unsigned char dat;                  
  24   1          IAP_CONTR = ENABLE_IAP;       
  25   1          IAP_CMD = CMD_READ;           
  26   1          IAP_ADDRL = addr;             
  27   1          IAP_ADDRH = addr >> 8;          
  28   1          IAP_TRIG = 0x5a;             
  29   1          IAP_TRIG = 0xa5;             
  30   1          _nop_();                      
  31   1          dat = IAP_DATA;
  32   1          IapIdle();  
  33   1          return dat;                   
  34   1      }
  35          
  36          void IapProgramByte(unsigned int addr, unsigned char dat) //写入1字节
  37          {
  38   1          IAP_CONTR = ENABLE_IAP;        
  39   1          IAP_CMD = CMD_PROGRAM;        
  40   1          IAP_ADDRL = addr;             
  41   1          IAP_ADDRH = addr >> 8;         
  42   1          IAP_DATA = dat;                
  43   1          IAP_TRIG = 0x5a;              
  44   1          IAP_TRIG = 0xa5;                
  45   1          _nop_();    
  46   1          IapIdle();  
  47   1      }
  48          
  49          void IapEraseSector(unsigned int addr) //扇区擦除
  50          {
  51   1          IAP_CONTR = ENABLE_IAP;        
  52   1          IAP_CMD = CMD_ERASE;          
  53   1          IAP_ADDRL = addr;             
  54   1          IAP_ADDRH = addr >> 8;         
  55   1          IAP_TRIG = 0x5a;              
C51 COMPILER V9.00   EEPROM                                                                02/02/2015 10:24:51 PAGE 2   

  56   1          IAP_TRIG = 0xa5;               
  57   1          _nop_(); 
  58   1          IapIdle();  
  59   1      }
  60          void IAPWrite()   //陀螺仪校准
  61          {
  62   1        IapEraseSector(0xC800); //扇区擦除
  63   1        IapEraseSector(0xC801);
  64   1        IapEraseSector(0xC802);
  65   1        IapEraseSector(0xC803);
  66   1        IapEraseSector(0xC804);
  67   1        IapEraseSector(0xC805);
  68   1        IapEraseSector(0xC806);
  69   1        g_y = GetData(GYRO_YOUT_H);  //读取陀螺仪数据
  70   1        g_x = GetData(GYRO_XOUT_H);
  71   1        g_z = GetData(GYRO_ZOUT_H);
  72   1        IapProgramByte(0xC800,g_y>>8);  //写入数据至EEPROM
  73   1        IapProgramByte(0xC801,g_y); 
  74   1        IapProgramByte(0xC802,g_x>>8);
  75   1        IapProgramByte(0xC803,g_x);
  76   1        IapProgramByte(0xC804,g_z>>8);
  77   1        IapProgramByte(0xC805,g_z);
  78   1        IapProgramByte(0xC806,1);
  79   1      }
  80          void IAPRead()
  81          {
  82   1        unsigned char i;
  83   1        i=IapReadByte(0xC806);
  84   1        if(i==1)      //判断数据是否已经更新过，更新过才读取数据
  85   1        {
  86   2        g_y=IapReadByte(0xC800)<<8|IapReadByte(0xC801);
  87   2        g_x=IapReadByte(0xC802)<<8|IapReadByte(0xC803);
  88   2        g_z=IapReadByte(0xC804)<<8|IapReadByte(0xC805);
  89   2        }
  90   1      }
  91          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    294    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
